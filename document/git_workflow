@goto web repo -> issues labels [develop] -> feature,bug,test,...

git checkout -b feature/1-add-cart.model-file develop
git add cart.model.js
git commit -m "#1 - devh [add] cart model"
git push --set--upstream origin feature/1-add-cart.model-file

@goto web repo:
	join develop to pull
	comment I do - refer #1
	
git checkout -b release-1.0.0 develop
git tag 'v1.0.0'
git push --tags

@goto web repo default -> tags to check

git merge develop
git push --set--upstream origin release-1.0.0


release->master

compare and pull request-> comment

git checkout master
git pull
git tag 'v1.0.0'
git push --tags

git branch -a

git branch -d release-1.0.0
git push origin -d release-1.0.0
git branch -d feature/1-add-cart.model-file
git push origin -d feature/1-add-cart.model-file

git checkout develop
git checkout -b feature/4-add-product.model-file develop
git add product.model.js
git commit -m "#4 - devh [add] product model"
git push --set--upstream origin feature/4-add-product.model-file

@goto web repo:
	join develop to pull
	comment I do - refer #4
	
git checkout develop
git pull

git branch -d feature/4-add-product.model-file
git push origin -d feature/4-add-product.model-file

git checkout -b release-1.1.0

@modified
git add product.model.js
git status
git commit -m "publish release-1.1.0"
git push --set--upstream origin release-1.1.0

@goto web repo merge r1.1.0 to main

git checkout master
git pull
git branch -d release-1.1.0
git push origin -d release-1.1.0




git tag 'v1.1.0'
git push --tags
git push

git checkout develop

@if host fix

git checkout master
git checkout -b hostfixes
git add product.model.js 
git commit -m "#5 - devh [fix] product"
git push --set--upstream origin hostfixes

@check and merge to main

git checkout master
git pull
git branch -d hostfixes
git push origin -d hostfixes


